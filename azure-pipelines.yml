# Starter pipeline
#- task: AzureWebApp@1
#  inputs:
#    azureSubscription: 'ml-web-app'
#    appType: 'webAppLinux'
#    appName: 'webappbadreldin'
#    deployToSlotOrASE: true
#    resourceGroupName: 'web-app'
#    slotName: 'production'
#    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
#    runtimeStack: 'PYTHON|3.8'
#    startUpCommand: 'python app.py'
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: linux-vm-agent

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: linux-vm-agent
    steps:
    - script: |
        python3.8 -m pip install --upgrade pip
        python3.8 -m pip install setup
        python3.8 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Install Setup'
      
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName: 'Run lint tests'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop
